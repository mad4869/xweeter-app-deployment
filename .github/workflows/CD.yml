name: Continuous Delivery

on: 
    push:
        branches: ["main"]

jobs:
    build_push:
        name: Build and Push Image to Dockerhub
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2
            
            - name: Login to Dockerhub
              uses: docker/login-action/@v2
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}
            
            - name: Set Up Docker Buildx
              uses: docker/setup-buildx-action/@v2
            
            - name: Build and Push Xweeter API
              uses: docker/build-push-action@v4
              with:
                context: ./server
                file: ./server/Dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/xweeter-api:${{ github.run_number }}
            
            - name: Build and Push Xweeter
              uses: docker/build-push-action@v4
              with:
                context: ./client
                file: ./client/Dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/xweeter:${{ github.run_number }} 
    
    deploy:
        name: Deploy to Server
        runs-on: self-hosted
        needs: build_push

        steps:
            - name: Install Docker
              run: |
                sudo apt-get update
                sudo apt-get install ca-certificates curl gnupg
                sudo install -m 0755 -d /etc/apt/keyrings
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
                sudo chmod a+r /etc/apt/keyrings/docker.gpg
                
                echo \
                  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
                  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
                sudo apt-get update
                sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
                sudo docker run hello-world
                
            - name: Pull Newest Images
              run: |
                docker pull postgres:latest
                docker pull ${{ secrets.DOCKERHUB_USERNAME }}/xweeter-api:${{ github.run_number }}
                docker pull ${{ secrets.DOCKERHUB_USERNAME }}/xweeter:${{ github.run_number }}
            
            - name: Stop and Remove Existing Containers and Networks
              run: |
                docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)
                docker network prune -f

            - name: Create Network and Volume
              run: |
                docker network create xweeter-network
                docker volume create xweeter-api-volume
                docker volume create xweeter-volume
                
            - name: Run Containers
              run: |
                docker run -d -p 5432:5432 -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} -e POSTGRES_DB=x-db --network xweeter-network --name postgres-container postgres
                sleep 5
                docker run -d -p 5000:5000 -v xweeter-api-volume -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} -e POSTGRES_DB=x-db -e POSTGRES_HOST=postgres-container --network xweeter-network --name xweeter-api-container ${{ secrets.DOCKERHUB_USERNAME }}/xweeter-api:${{ github.run_number }}
                sleep 5
                docker run -d -p 4173:4173 -v xweeter-volume --network xweeter-network --name xweeter-container ${{ secrets.DOCKERHUB_USERNAME }}/xweeter:${{ github.run_number }}
            
            - name: Remove Unused Data
              run: |
                docker system prune -af